version: '3'
services:
  builder:
    build:
      args:
        - NAMESPACE
        - REPOSITORY_URI
        - REPOSITORY_REV
        - REPOSITORY_SHA
        - USER
        - USER_HOME_DIR
      context: builder
      dockerfile: builder.Dockerfile
      tags:
        - ${NAMESPACE}.trinitycore.builder:${BUILDER_VERSION}
    entrypoint: scripts/builder-entrypoint.sh
    environment:
      - BUILDER_IMAGE=${NAMESPACE}.trinitycore.builder:${BUILDER_VERSION}
      - AUTHSERVER_IMAGE_TAG=${NAMESPACE}.trinitycore.authserver:${AUTHSERVER_VERSION}
      - WORLDSERVER_IMAGE_TAG=${NAMESPACE}.trinitycore.worldserver:${WORLDSERVER_VERSION}
      - USE_CACHED_CLIENT_DATA
      - NAMESPACE
      - WORLDSERVER_CONF_PATH
      - CLIENT_PATH
      - USER_HOME_DIR
    init: true
    network_mode: none
    profiles:
      - build
      - release
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: ${CLIENT_PATH}
        target: ${USER_HOME_DIR:-implementation defined}/WoW-3.3.5a-12340
      - type: volume
        source: client_data
        target: ${USER_HOME_DIR:-implementation defined}/data
      - type: volume
        source: trinitycore_shallow_clone
        target: ${USER_HOME_DIR:-implementation defined}/TrinityCore
  ide:
    build:
      args:
        - IDE_NEOVIM_REV
        - NAMESPACE
        - NODEJS_VER
        - USER
        - USER_HOME_DIR
      context: ide
      dockerfile: ide.Dockerfile
      tags:
        - ${NAMESPACE}.trinitycore.ide:${IDE_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-ide-container
    entrypoint: scripts/ide-entrypoint.sh
    environment:
      - REPOSITORY_URI
      - REPOSITORY_REV
      - REPOSITORY_SHA
      - USER_HOME_DIR
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
    hostname: ide
    init: true
    networks:
      dev:
      inside:
        ipv4_address: 11.12.13.5
    # EXPLAIN: because of deno.js that does not support linux/arm64 architecture
    platform: linux/amd64
    profiles:
      - build
      - dev
    secrets:
      - ide_ssh_public_key
      - ide_ssh_secret_key
    ulimits:
      core:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: client_data
        target: ${USER_HOME_DIR:-implementation defined}/client_data
      - type: volume
        source: ide_storage
        target: ${USER_HOME_DIR:-implementation defined}/ide_storage
      - type: volume
        source: ide_npm_prefix
        target: ${USER_HOME_DIR:-implementation defined}/.npm-prefix
        volume:
          nocopy: false
      - type: volume
        source: ide_npm_cache
        target: ${USER_HOME_DIR:-implementation defined}/.npm-cache
        volume:
          nocopy: false
      - type: volume
        source: ide_xdg_local
        target: ${USER_HOME_DIR:-implementation defined}/.local
        volume:
          nocopy: false
networks:
  dev:
secrets:
  ide_ssh_public_key:
    file: ${SSH_PUBLIC_KEY_FILE_PATH}
  ide_ssh_secret_key:
    file: ${SSH_SECRET_KEY_FILE_PATH}
volumes:
  client_data:
  ide_storage:
  trinitycore_shallow_clone:
  ide_npm_prefix:
  ide_npm_cache:
  ide_xdg_local:
