version: '3'
services:
  servers_and_tools_builder:
    build:
      args:
        - DOCKER_GID
        - DOCKER_UID
        - REPOSITORY_URI
        - REPOSITORY_REV
        - REPOSITORY_SHA
        - USE_DOCKER_DESKTOP
      context: .
      dockerfile: servers_and_tools_builder.Dockerfile
      tags:
        - ${NAMESPACE}.trinitycore.servers_and_tools_builder:${SERVERS_AND_TOOLS_BUILDER_VERSION}
    entrypoint: scripts/servers_and_tools_builder-entrypoint.sh
    environment:
      - SERVERS_AND_TOOLS_BUILDER_IMAGE=${NAMESPACE}.trinitycore.servers_and_tools_builder:${SERVERS_AND_TOOLS_BUILDER_VERSION}
      - AUTHSERVER_IMAGE_TAG=${NAMESPACE}.trinitycore.authserver:${AUTHSERVER_VERSION}
      - WORLDSERVER_IMAGE_TAG=${NAMESPACE}.trinitycore.worldserver:${WORLDSERVER_VERSION}
      - USE_CACHED_CLIENT_DATA=${USE_CACHED_CLIENT_DATA}
      - NAMESPACE=${NAMESPACE}
      - WORLDSERVER_CONF_PATH=${WORLDSERVER_CONF_PATH}
      - CLIENT_PATH=${CLIENT_PATH}
      - USER_HOME_DIR
    init: true
    network_mode: none
    profiles:
      - build
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ${CLIENT_PATH}
        target: ${USER_HOME_DIR:-implementation defined}/WoW-3.3.5a-12340
      - type: volume
        source: client_data
        target: ${USER_HOME_DIR:-implementation defined}/data
      - type: volume
        source: trinitycore_sources
        target: ${USER_HOME_DIR:-implementation defined}/TrinityCore
volumes:
  client_data:
  trinitycore_sources:
