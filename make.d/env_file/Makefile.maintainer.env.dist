################################################################################
# Makefile.maintainer.env.dist
#
# This file contains various environment variables that alter the way
# TrinityCore components are built or run. It is designed to be tweaked by a
# maintainer of this project.
#
# This is a template file. In order to use it, copy it to the same directory
# with the `Makefile.maintainer.env` file name.
#
# This file structure is important and parsed by the `make init` target.
# Therefore, you can change variable values but do not touch anything else of
# the `make init` target may fail.
################################################################################

################################################################################
# SECTION INDEX
#
# DB UPDATE
# BUILD CONFIG
# VERSIONING
# SERVER IMAGES CONFIGURATION
# IDE CONFIGURATION
#
################################################################################

################################################################################
# DB UPDATE
################################################################################

# The URI where to fetch the latest full TDB world database dump archive.
# Usually, this is something you can find in the release section of the
# trinitycore github project. You may have to update this from time to time,
# usually, the lifetime of this archive is several months.
# Using the special 'latest' value will fetch the latest available release on
# the official TrinityCore repository. Any value that is not 'latest' must be a
# valid URI, for instance:
# default: latest
TDB_FULL_URI = latest

################################################################################
# BUILD CONFIG
################################################################################

# The default docker compose project name should do the job.
# Change this variable value when you want to have concurrent compose project
# running in parallel for whatever reasons.
# default: trinitycore_in_docker
COMPOSE_PROJECT_NAME = trinitycore_in_docker

# A namespace to differentiate built images. It is used as a part of the
# identifier of produced docker images. Don't hesistate to put your very own
# here, be creative!
# default: trinitycore.test.local
NAMESPACE = trinitycore.test.local

# The TrinityCore git repository used. Can be the official or a fork.
# default: git@github.com:TrinityCore/TrinityCore.git
REPOSITORY_URI = git@github.com:TrinityCore/TrinityCore.git

# The URI where to fetch raw source file tracked by the git repository. This
# URI is usefull to fetch some file outside of the clone repository process.
# For instance, it's used to fetch configuration files for the authentication
# server and the world server.
# The default value points to the official TrinityCore repository. You may have
# to change it if you want to work on your own fork.
# default: https://raw.githubusercontent.com/TrinityCore/TrinityCore
RAW_REPOSITORY_URI = https://raw.githubusercontent.com/TrinityCore/TrinityCore

# The branch or tag to check out in the TrinityCore repository for the build
# process. Keep in mind that only the 3.3.5 version (WOTLK non classic) is
# supported.
# default: 3.3.5
REPOSITORY_REV = 3.3.5

# The specific commit to check out in the TrinityCore repository. May be left
# empty.
# It's useful to change it if you're working on a branch and you want to test
# newest commit without having to delete the entire docker build cache each
# time.
REPOSITORY_SHA =

# Indicate if pre existing cached client data can be used to build the
# worldserver service image. It is generally a good thing to let it enabled by
# default unless you want to re-generate client data because their versions
# have changed.
# default: 1
USE_CACHED_CLIENT_DATA = 1

################################################################################
# VERSIONING
################################################################################

# The version you want to give to your produced databases service docker image.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
DATABASES_VERSION = v0.1.0

# The version you want to give to your produced builder service docker image.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
BUILDER_VERSION = v0.1.0

# The version you want to give to your produced ide service docker image.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
IDE_VERSION = v0.1.0

# The version you want to give to your produced worldserver_console service
# docker image. This service provide remote access to the worldserver via SOAP
# protocol.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
WORLDSERVER_CONSOLE_VERSION = v0.1.0

# The version you want to give to your produced authserver service docker
# image.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
AUTHSERVER_VERSION = v0.1.0

# The version you want to give to your produced worldserver service docker
# image.
# Using SemVer versioning system is generally a good idea. using `latest` is
# discouraged.
# default: v0.1.0
WORLDSERVER_VERSION = v0.1.0

################################################################################
# SERVER IMAGES CONFIGURATION
################################################################################

# The linux user unique identifier for trinitycore. This user is setup in the
# final authserver and worldserver images. It is recommended to set a number
# above 1000.
# default: 2000
TRINITYCORE_USER_GID = 2000

# The linux group unique identifier for trinitycore. This group is setup in the
# final authserver and worldserver images. It is recommended to set a number
# above 1000.
# default: 2000
TRINITYCORE_USER_UID = 2000

################################################################################
# IDE CONFIGURATION
################################################################################

# The ssh public key file path targetting the public key to use to interact
# with your git repository. This file must exist and points to a valid ssh
# public key.
# default: ~/.ssh/id_rsa.pub
SSH_PUBLIC_KEY_FILE_PATH = ~/.ssh/id_rsa.pub

# The ssh secret key file path targetting the secret key to use to interact
# with your git repository. This file must exist and points to a valid ssh
# secret key.
# default: ~/.ssh/id_rsa
SSH_SECRET_KEY_FILE_PATH = ~/.ssh/id_rsa

# In the ide service, the neovim revision to checkout and build. Default that
# is master is perfectly fine and compliant with the live-at-head philosophy of
# neovim.
# default: master
IDE_NEOVIM_REV = master

# In the ide service, the Node.js version to install. Feel free to update it
# when new releases are available.
# Specifying the special 'latest' value will provide you with the latest
# available release. Otherwise you have to set a valid semver compliant
# version, for instance v22.4.0
# default: latest
NODEJS_VER = latest

# The git user name to use when working within the ide container. If this
# variable is left uninitialized, git will prevent you commit any work you've
# done unless you specify a user name. Besides, you'll have to set it again if
# you restart the ide container thus, you'd better to set it here for
# convenience.
GIT_USER_NAME =

# The git user email to use when working within the ide container. If this
# variable is left uninitialized, git will prevent you commit any work you've
# done unless you specify a user email. Besides, you'll have to set it again if
# you restart the ide container thus, you'd better to set it here for
# convenience.
GIT_USER_EMAIL =

# The target directory in which you plan to clone the TrinityCore repository.
# Keep in mind you should clone this into a persistent storage such as a named
# volume or (not advised) a bind mount volume.
# default: ~/ide_storage/TrinityCore
TRINITYCORE_REPOSITORY_TARGET_DIRECTORY = ~/ide_storage/TrinityCore

# The target install directory for the built TrinityCore servers, tools, libs
# and template configuration files.
# default: ~/ide_storage/trinitycore
TRINITYCORE_INSTALL_DIRECTORY = ~/ide_storage/trinitycore

# The user name to use in the 'ide' service container. Keep in mind that if you
# use docker desktop (if the variable USE_DOCKER_DESKTOP is set to 1), the user
# you will log in the ide service container with is always root, regardless of
# the value you put in this variable.
# default: tc_dev
IDE_USER_NAME = tc_dev

# The user home directory of the logged user in the 'ide' service container.
# Keep in mind that if you use docker desktop (if the variable
# USE_DOCKER_DESKTOP is set to 1), the user home directory is always /root,
# regardless of the value you put in this variable.
# default: /home/tc_dev
IDE_USER_HOME_DIR = /home/tc_dev
